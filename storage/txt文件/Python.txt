ord() 获取字符的unicode编码


chr() 将编码表示为字符


if 语句一定要有缩进


以Unicode表示的str通过encode()方法可以编码为指定的bytes，例如：
>>> 'ABC'.encode('ascii')
b'ABC'
>>> '中文'.encode('utf-8')
b'\xe4\xb8\xad\xe6\x96\x87'
>>> '中文'.encode('ascii')


decode()方法将Bytes变为指定的字符串：
>>> b'ABC'.decode('ascii')
'ABC'
>>> b'\xe4\xb8\xad\xe6\x96\x87'.decode('utf-8')
'中文'


如果bytes中只有一小部分无效的字节，可以传入errors='ignore'忽略错误的字节：
>>> b'\xe4\xb8\xad\xff'.decode('utf-8', errors='ignore')
'中'


要计算str包含多少个字符，可以用len()函数：
>>> len('ABC')
3
>>> len('中文')
2
如果换成bytes，len()函数就计算字节数：
>>> len(b'ABC')
3
>>> len(b'\xe4\xb8\xad\xe6\x96\x87')
6
>>> len('中文'.encode('utf-8'))
6

xxxx.append() 往有序表里添加一个元素

xxxx.pop()删除有序表里末尾的元素，xxxx.pop(i)删除指定位置的元素（从0开始）

input()为用户输入，返回一个字符串，要将字符串变为整数用int(String)

for x in list    将List有序表中的元素依次代入x并执行缩进语句

L[0:3]表示，从索引0开始取，直到索引3为止，但不包括索引3。即索引0，1，2，正好是3个元素。如果第一个索引是0，还可以省略不写：L[:3].
Python支持L[-1]取倒数第一个元素，那么它同样支持倒数切片,若要跳着取，则多加一个":"，后面加上间隔

range() 生成一个整数有序序列 如 list(range(5)) = [0,1,2,3,4]

数据类型检查可以用内置函数isinstance()实现：
if not isinstance(x, (int, float)):

抛出错误：
raise TypeError('bad operand type')

列表生成式：
写列表生成式时，把要生成的元素x * x放到前面，后面跟for循环，就可以把list创建出来。如：
>>> [x * x for x in range(1, 11)]
[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]
for循环后面还可以加上if判断，这样我们就可以筛选出仅偶数的平方：
>>> [x * x for x in range(1, 11) if x % 2 == 0]
[4, 16, 36, 64, 100]