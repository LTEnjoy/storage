第八章实验7
assume cs:code ds:data

data segment
	db'1975','1976','1977','1978','1979','1980','1981','1982','1983','1984'
	db'1985','1986','1987','1988','1989','1990','1991','1992','1993','1994'
	db'1995'
	
	dd 16,22,382,1356,2390,8000,16000,24486,50065,97479,140417,197514
	dd 345980,590827,803530,1183000,1843000,2759000,3753000,4649000,5937000
	
	dw 3,7,9,13,28,38,130,220,476,778,1001,1442,2258,2793,4037,5635,8226
	dw 11542,14430,15257,17800
	
data ends

table segment
	db 21 dup('year summ ne ?? ')

table ends

	
code segment
start:
		mov ax,data
		mov ds,ax
		mov sp,2h
		mov ax,table
		mov es,ax
		mov bx,0000h
		mov si,0000h
		mov di,0000h
		mov cx,21
s:		
		push cx
		
		mov ax,0000h
s0:		
		mov ax,[si]
		mov es:[bx],ax
		mov ax,[si].2h
		mov es:[bx+2],ax
		mov ax,[si+84]
		mov es:[bx+5],ax
		mov ax,[si+84].2h
		mov es:[bx+5]+2,ax
		mov ax,[di+168]
		mov es:[bx+10],ax
		mov ax,[si+84]
		mov dx,[si+84].2h
		div word ptr [di+168]
		mov es:[bx+13],ax
		add di,2h
		add bx,10h
		add si,4h
		loop s0
		
	
		
		mov ax,4c00h
		int 21h
code ends
end start

第九章实验
assume cs:code ds:data

data segment
	db 'welcome to masm '
	
data ends

code segment
start:
		mov ax,data
		mov ds,ax
		mov bx,0h
		mov di,0h
		mov si,1h
		mov ax,0b800h
		mov es,ax
		mov ah,10001010B
		mov cx,16
s:		
		mov al,[bx]
		mov es:[di],al
		mov es:[si],ah
		inc bx
		add di,2
		add si,2
		loop s
		
		mov cx,16
		mov di,160
		mov si,161
		mov bx,0h
		mov ah,10101100B
s0:
		mov al,[bx]
		mov es:[di],al
		mov es:[si],ah
		inc bx
		add di,2
		add si,2
		loop s0
		
		mov cx,16
		mov di,320
		mov si,321
		mov bx,0h
		mov ah,11111001B
s1:
		mov al,[bx]
		mov es:[di],al
		mov es:[si],ah
		inc bx
		add di,2
		add si,2
		loop s1
		
		
		mov ah,7
		int 21h
		mov ax,4c00h
		int 21h
code ends
end start

第十章实验10.1    显示字符	
assume cs:code ds:data

data segment
	db 'welcome to masm!',0
	
data ends

code segment
start:	
		mov dh,0
		mov dl,20
		mov cl,2
		mov ax,data
		mov ds,ax
		mov si,0
		call show_str
		
		mov ah,7
		int 21h
		mov ax,4c00h
		int 21h

show_str:	
		mov ax,0b800h
		mov es,ax
		mov al,160
		mul dh
		mov bx,ax
		mov al,2
		mul dl
		mov di,ax
		mov dl,cl
	lp:	
		mov ch,0
		mov cl,[si]
		jcxz ok
		mov byte ptr es:[bx][di],cl
		inc di
		mov es:[bx][di],dl
		inc di
		inc si
		jmp short lp
	ok:
		ret
code ends
end start

第十章实验10.2  除法溢出
assume cs:code 

code segment
start:	
		mov ax,4240h
		mov dx,000fh
		mov cx,0ah
		call divdw
		
		mov ax,4c00h
		int 21h
divdw:
		mov si,ax
		mov ax,dx
		mov dx,0
		div cx
		mov bx,ax
		mov ax,si
		div cx
		mov cx,dx
		mov dx,bx
		ret
		
code ends
end start

第十章 实验10.3 显示数字
assume cs:code ds:data ss:stack

data segment
	db 16 dup(0)
data ends

stack segment
	dw 8 dup(0)
stack ends
	
code segment
start:	
		mov ax,stack
		mov ss,ax
		mov sp,16
		mov ax,12666
		mov bx,data
		mov ds,bx
		mov si,0
		mov di,0
		mov dx,0
		call dtoc
		
		mov dh,8
		mov dl,3
		mov cl,2
		call show_str
		
		mov ah,7
		int 21h
		mov ax,4c00h
		int 21h
dtoc:
		mov bx,10
		div bx
		mov cx,ax
		mov bx,dx
		add bx,30h
		push bx
		mov dx,0
		inc di
		jcxz to
		jmp short dtoc
	to: 
		mov cx,di
	s:	
		pop byte ptr [si]
		inc si
		loop s
show_str:	
		mov si,0
		mov ax,0b800h
		mov es,ax
		mov al,160
		mul dh
		mov bx,ax
		mov al,2
		mul dl
		mov di,ax
		mov dl,cl
	lp:	
		mov ch,0
		mov cl,[si]
		jcxz ok
		mov byte ptr es:[bx][di],cl
		inc di
		mov es:[bx][di],dl
		inc di
		inc si
		jmp short lp
	ok:
		ret

code ends
end start

第十一章实验11
assume cs:code ds:data ss:stack

data segment
	db "Beginner's All_purpose Symbolic Instruction Code." , 0
data ends

	
code segment
start:	
		mov ax, data
		mov ds,ax
		mov si,0
		call letterc
		
		mov dh,0
		mov dl,0
		mov cl,2 
		mov si,0
		
		mov ax,4c00h
		int 21h
		
letterc:
		mov ch,0
		mov cl,[si]
		cmp byte ptr [si],97
		jb next
		cmp byte ptr [si],122
		ja next
		and byte ptr [si],11011111b
		
next:
		inc si
		jcxz ok
		jmp letterc
ok:		
		ret

code ends
end start

十二章实验十二  除法中断
assume cs:code 
	
code segment
start:	
		mov di,200h
		mov ax,0
		mov es,ax
		mov si, offset do
		mov es:[0],di
		mov es:[2],ax
		mov ax,cs
		mov ds,ax
		cld
		mov cx, offset doEnd - offset do
		rep movsb
		
		mov ax,4c00h
		int 21h
		
do:
		jmp doStart
		db"divide overflow!",0

doStart:	
		mov dh,8
		mov dl,3
		mov cl,2
		mov si,203h
		call show_str
		
		mov ax,4c00h
		int 21h
	show_str:	
		mov ax,0b800h
		mov es,ax
		mov al,160
		mul dh
		mov bx,ax
		mov al,2
		mul dl
		mov di,ax
		mov dl,cl
	lp:	
		mov ch,0
		mov cl,cs:[si]
		jcxz ok
		mov byte ptr es:[bx][di],cl
		inc di
		mov es:[bx][di],dl
		inc di
		inc si
		jmp short lp
	ok:
		ret
doEnd:
		nop
code ends
end start

第十三章实验13.1 int7ch中断
assume cs:code 
	
code segment
start:	
		mov di,200h
		mov ax,0
		mov es,ax
		mov si, offset dostart
		mov es:[07ch*4],di
		mov es:[07ch*4+2],ax
		mov ax,cs
		mov ds,ax
		cld
		mov cx, offset doEnd - offset dostart
		rep movsb
		
		mov ax,4c00h
		int 21h

doStart:	
		call show_str
		iret
	show_str:	
		mov ax,0b800h
		mov es,ax
		mov al,160
		mul dh
		mov bx,ax
		mov al,2
		mul dl
		mov di,ax
		mov dl,cl
	lp:	
		mov ch,0
		mov cl,[si]
		jcxz ok
		mov byte ptr es:[bx][di],cl
		inc di
		mov es:[bx][di],dl
		inc di
		inc si
		jmp short lp
	ok:
		ret
doEnd:
		nop
code ends
end start
第十三章实验13.2 输出"!"
assume cs:code 
	
code segment
start:	
		mov di,200h
		mov ax,0
		mov es,ax
		mov si, offset dostart
		mov es:[07ch*4],di
		mov es:[07ch*4+2],ax
		mov ax,cs
		mov ds,ax
		cld
		mov cx, offset doEnd - offset dostart
		rep movsb
		
		mov ax,4c00h
		int 21h

doStart:	
		dec cx
		push di
		jcxz ok
		mov di,sp
		add ss:[di+2],bx
	ok:
		pop di
		iret
	
doEnd:
		nop
code ends
end start
第十四章实验14 显示CMOS RAM中存储的时间信息
assume cs:code


code segment
start:
		mov si,0
		mov al,9h
		call transfer
		mov al,8h
		call transfer
		mov al,7h
		call transfer
		mov al,4h
		call transfer
		mov al,2h
		call transfer
		mov al,0
		call transfer
		
		mov ax,4c00h
		int 21h
transfer:
		out 70h,al
		in al,71h
		mov ah,al
		mov cl,4
		shr ah,cl
		and al,00001111b
		add ah,30h
		add al,30h
		mov bx,0b800h
		mov es,bx
		mov byte ptr es:[160*12+80+si],ah
		mov byte ptr es:[160*12+80+si+2],al
		mov byte ptr es:[160*12+80+si+4],'.'
		add si,6
		ret
		
code ends
end start
第十五章实验15 安装int 9
assume cs:code
stack segment
	db 128 dup(0)
stack ends

data segment
	dw 0,0
data ends

code segment
start:
		mov ax,stack
		mov ss,ax
		mov sp,128
		
		push cs
		pop ds
		
		mov ax,0
		mov es,ax
		
		mov si,offset int9
		mov di,204h
		mov cx,offset int9end - offset int9
		cld
		rep movsb
		
		push es:[9*4]
		pop es:[200h]
		push es:[9*4+2]
		pop es:[202h]
		
		cli
		mov word ptr es:[9*4],204h
		mov word ptr es:[9*4+2],0
		sti
		
		mov ax,4c00h
		int 21h
		
	int9:
		push ax
		push bx
		push cx
		push es
		
		in al,60h
		
		pushf
		call dword ptr cs:[200h]
		
		cmp al,09eh
		jne int9ret
		
		mov ax,0b800h
		mov es,ax
		mov bx,0
		mov cx,2000
	s:
		mov byte ptr es:[bx],'A'
		add bx,2
		loop s
	int9ret:
		pop es
		pop bx
		pop cx
		pop ax
		iret
	int9end:
		nop
code ends
end start
第十六章实验16 多功能子程序
assume cs:code

code segment
start:
		mov ax,0
		mov es,ax
		push cs
		pop ds
		mov si,offset setScreen
		mov di,200h
		mov cx,offset setScreenEnd - offset setScreen
		cld
		rep movsb
		
		cli
		mov word ptr es:[7ch*4],200h
		mov word ptr es:[7ch*4+2],0
		sti
		
		mov ax,4c00h
		int 21h
		
	setScreen:
		jmp short set
		dw sub1-setScreen+200h,sub2-setScreen+200h,sub3-setScreen+200h,sub4-setScreen+200h
		
	set:
		push bx
		
		cmp ah,3
		ja sret
		mov bl,ah
		mov bh,0
		add bx,bx
		call word ptr cs:[bx+202h]
	sret:
		pop bx
		mov ax,4c00h
		int 21h
	sub1:
		push bx
		push cx
		push es
		mov bx,0b800h
		mov es,bx
		mov bx,0
		mov cx,2000
	sub1s:
		mov byte ptr es:[bx],' '
		add bx,2
		loop sub1s
		pop es
		pop cx
		pop bx
		ret
	
	sub2:
		push bx
		push cx
		push es
		
		mov bx,0b800h
		mov es,bx
		mov bx,1
		mov cx,2000
	sub2s:
		and byte ptr es:[bx],11111000b
		or es:[bx],al
		add bx,2
		loop sub2s
		
		pop es
		pop cx
		pop bx
		ret
	sub3:
		push bx
		push cx
		push es
		mov cl,4
		shl al,cl
		mov bx,0b800h
		mov es,bx
		mov bx,1
		mov cx,2000
	sub3s:
		and byte ptr es:[bx],10001111b
		or es:[bx],al
		add bx,2
		loop sub3s
		pop es
		pop cx
		pop bx
		ret
	sub4:
		push cx
		push si
		push di
		push es
		push ds
		mov si,0b800h
		mov es,si
		mov ds,si
		mov si,160
		mov di,0
		cld
		mov cx,24
	sub4s:
		push cx
		mov cx,160
		rep movsb
		pop cx
		loop sub4s
		
		mov cx,80
		mov si,0
	sub4s1:
		mov byte ptr [160*24+si],' '
		add si,2
		loop sub4s1
		
		pop ds
		pop es
		pop di
		pop si
		pop cx
		ret
	
	setScreenEnd:
		nop
code ends
end start

用户输入字符串
assume cs:code 
data segment
	db 16 dup(0)
data ends

code segment
start:
		mov ax,data
		mov ds,ax
		mov si,0
		mov dh,12
		mov dl,40
	getstr:
		push ax
	getstrs:
		mov ah,0
		int 16h
		cmp al,20h
		jb nochar
		mov ah,0
		call charStack
		mov ah,2
		call charStack
		jmp getstrs
		
	nochar:
		cmp ah,0eh
		je backspace
		cmp ah,1ch
		je enter
		jmp getstrs
	
	backspace:
		mov ah,1
		call charStack
		mov ah,2
		call charStack
		jmp getstrs
		
	enter:
		mov al,0
		mov ah,0
		call charStack
		mov ah,2
		call charStack
		pop ax
		mov ax,4c00h
		int 21h
		
	charStack:
		jmp short charStart
		table dw charPush,charPop,charShow
		top dw 0						;
		
	charStart:
		push bx
		push dx
		push di
		push es
		
		cmp ah,2
		ja sret
		mov bl,ah
		mov bh,0
		add bx,bx
		jmp word ptr table[bx]
	
	charPush:
		cmp top,16
		je sret
		mov bx,top
		mov [si][bx],al
		inc top
		jmp sret
	
	charPop:
		cmp top,0
		je sret
		dec top
		mov bx,top
		mov al,[si][bx]
		jmp sret
		
	charShow:
		mov bx,0b800h
		mov es,bx
		mov al,160
		mov ah,0
		mul dh
		mov di,ax
		add dl,dl
		mov dh,0
		add di,dx
		
		mov bx,0
	
	charShows:
		cmp bx,top
		jne noEmpty
		mov byte ptr es:[di],' '
		mov ah,2
		mov bh,0
		mov dh,12
		mov dl,40
		add dl,bl
		int 10h
		jmp sret
	
	noEmpty:
		mov al,[si][bx]
		mov es:[di],al
		
		inc bx
		add di,2
		jmp charShows
	sret:
		pop es
		pop di
		pop dx
		pop bx
		ret
		
code ends
end start